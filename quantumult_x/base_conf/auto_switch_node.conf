# ------------------------------------------------------------------------------
# Quantumult X 官方配置说明：https://github.com/crossutility/Quantumult-X/blob/master/sample.conf
# 其他参考配置：
# - https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/QuantumultX_Profiles.conf
# - https://raw.githubusercontent.com/erdongchanyo/Rules/main/Quantumult%20X/LazyConf/QuantumultX_EDC-Lazy.conf
# 注意：
# - 注释，只需要写 # 号
# - - 但仅支持单行全注释，不支持行尾注释
# - - - 正确写法：# 这里是注释内容
# - - - 错误写法：server_check_url = xxx # 这里是注释内容
# ------------------------------------------------------------------------------

[general]

# server_check_url
# 对指定的网址进行相应测试，以确认节点的可用性
server_check_url = http://www.qualcomm.cn/generate_204

# resource_parser_url
# 资源解析器
resource_parser_url = https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/resource-parser.js

# geo_location_checker
# 用于节点页面的信息展示，可完整自定义
geo_location_checker = http://ip-api.com/json/?lang=zh-CN, https://github.com/KOP-XIAO/QuantumultX/raw/master/Scripts/IP_API.js

# dns_exclusion_list
# list中的域名将不使用fake-ip方式, 多个域名用“, ”连接。其它域名则全部采用 fake-ip 及远程解析的模式
dns_exclusion_list = *.localnetwork.uop, *.qq.com, qq.com

# 下列表中内容将不经过 Quantumult X 的处理
excluded_routes = 192.168.0.0/16, 10.0.0.0/8, 172.16.0.0/12, 100.64.0.0/10, 17.0.0.0/8
icmp_auto_reply = true

# 可科学上网 WiFi 网络下直连，其余一般 WiFi 和移动网络走分流
# running_mode_trigger 设置，运行模式模块，即根据网络自动切换 分流/直连/全局代理 等模式。
# running-mode-trigger 模式下，跟手动切换直连/全局代理 等效，rewrite/task 模块始终会生效，比 ssid 策略组设置简单，比 ssid-suspend 更灵活。
# running_mode_trigger = filter, filter, SSID1:all_direct, SSID2:all_direct, ..
# 上述写法，前两个 filter 先后表示 在 4G 网络跟一般 Wi-Fi 下，走 filter(分流)模式，后面则表示在 SSID1 下切换为全局直连，SSID2 切换为全局代理.
running_mode_trigger = filter, filter, HedyLamarr:all_direct

[dns]

# 禁用系统 DNS 解析
## 当使用了 external-dns 参数时，不得禁用系统 DNS 解析，会造成部分 DNS 解析异常
# no-system

# excluded_ssids，指定的 SSID 下禁用特定的 DNS 解析

# DoH
# - DoH 服务器(DNS over HTTPS)以加密的 HTTPS 协议进行 DNS 解析请求，避免原始 DNS 协议中用户的 DNS 解析请求被窃听或者修改的问题（例如中间人攻击）来达到保护用户隐私的目的
# - 设置 DoH 服务器后，所有其他常规 DNS 服务器设置将被忽略；当设置了多个 DoH 服务器时，只会使用第一个；当使用的 DoH 服务器不是基于 HTTP/2 时，DoH 将被暂时禁用。

## 阿里 DoH
doh-server = https://dns.alidns.com/dns-query, excluded_ssids = HedyLamarr

# 常规 DNS 服务器

## 阿里 DNS
# server = 223.5.5.5, excluded_ssids = HedyLamarr
# server = 223.6.6.6, excluded_ssids = HedyLamarr

## Google DNS
# server = 8.8.8.8, excluded_ssids = HedyLamarr
# server = 8.8.4.4, excluded_ssids = HedyLamarr

## 指定域名解析 DNS 服务器
# server = /*.taobao.com/223.5.5.5, excluded_ssids = HedyLamarr


[policy]
# 策略组
# - 将分流规则传递过来的网络请求进行分发

# 自动选择最优节点策略
# - server-tag-regex: 根据节点标签进行正则匹配，匹配到的节点将会被选中。
#  - 匹配所有节点正则：.*
#  - 为了节省流量，将过滤掉 “游戏” 类节点： server-tag-regex = ^(?!.*游戏)
url-latency-benchmark = Auto-Switch-Node, server-tag-regex = ^(?!.*游戏), check-interval = 600, tolerance = 0, img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Auto.png

# 自定义节点组策略
static = Custom-Group-Node, US, HK, JP, HK, SG, Other-Node, img-url = https://raw.githubusercontent.com/QuentinHsu/Apple-Rules-Script/main/icon/custom.png
# - 节点按地区分组策略
#  - 美国
static = US, server-tag-regex = 美|美国|🇺🇸|US|us, img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Country/US.png
#  - 香港
static = HK, server-tag-regex = 港|香港|🇭🇰|️HK|hk, img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Country/HK02.png
#  - 日本
static = JP, server-tag-regex = 日|日本|东京|🇯🇵|JP|jp, img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Country/JP.png
#  - 台湾
static = TW, server-tag-regex = 台|台湾|TW|tw, img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Country/TW02.png
#  - 新加坡
static = SG, server-tag-regex = 新|新加坡|狮城|🇸🇬|SG|sg, img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Country/SG.png
#  - 地区分组漏网之鱼
static = Other-Node, server-tag-regex = ^(?!.*(美|美国|🇺🇸|US|us|港|香港|🇭🇰|️HK|hk|日|日本|东京|🇯🇵|JP|jp|台|台湾|TW|tw|新|新加坡|狮城|🇸🇬|SG|sg)).*, img-url = https://raw.githubusercontent.com/QuentinHsu/Apple-Rules-Script/main/icon/custom.png

# 特殊节点分组策略
# 特殊节点策略
static = Special-Node, IPLC-Node, Game-Node
## 专线节点
static = IPLC-Node, server-tag-regex = 专线|IPLC|iplc, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/IPLC.png
## 游戏节点
static = Game-Node, server-tag-regex = 游戏|Game|game, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Game.png

# 最终节点策略：如果以上的策略均未被匹配到，则听从此策略组的规定
static = Final, Auto-Switch-Node, Special-Node, Custom-Group-Node, direct, img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Final01.png

# 国外
# - 国外连接策略
static = Outside, US, SG, HK, TW, JP, Final, direct, img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Outside.png
# - 国外媒体策略
static = GMedia, US, SG, HK, TW, JP, Final, direct, img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/GMedia.png
# - 国外媒体细分策略
# static = Netflix, US, SG, HK, TW, JP, Final, direct, img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Netflix.png
# static = Disney+, US, SG, HK, Final, direct, img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Disney+.png
# static = HBO, US, HK, TW, Final, direct, img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/HBO.png
static = YouTube, US, SG, HK, TW, JP, Final, direct, img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Youtube.png
# static = Spotify, US, SG, HK, TW, JP, Final, direct, img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Spotify.png
# static = TikTok, US, SG, HK, TW, JP, Final, direct, img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Tiktok.png
static = Telegram, US, SG, HK, TW, JP, Final, direct, img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Telegram.png
static = Twitter, US, SG, HK, TW, JP, Final, direct, img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Twitter.png
static = TestFlight, US, SG, HK, TW, JP, Final, direct, img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/TestFlight.png
static = Speedtest, US, SG, HK, TW, JP, Final, direct, img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Speedtest.png
# static = PayPal, direct, US, img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Paypal.png
static = Apple, US, SG, HK, TW, JP, Final, direct, img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Apple.png
static = Google, US, SG, HK, TW, JP, Final, direct, img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Google.png
static = Microsoft, US, HK, Final, direct, img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Microsoft.png

# 国内
# - 国内媒体细分策略
# static = Bilibili, HK, TW, direct, img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Bilibili.png
# static = iQiYi, TW, direct, img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Aiqiyi.png
# - 国内连接策略
static = Mainland, Final, direct, img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Mainland.png

# 广告策略
# - 该策略所对应的分流规则集十分庞大，12w+，请谨慎使用
static = Advertising, reject, img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/AdBlock.png

[filter_remote]
# 远程分流规则订阅
# - 将网络请求进行分流，网络请求的走向(是否能成功访问)由匹配到的策略组决定
# - 部分规则有先后顺序要求，调整顺序可能失效
# 【参数】
# - url: 规则订阅地址，不写参数名，直接写规则地址即可
# - tag: 规则订阅标签
# - force-policy: 强制策略组，如果分流规则设置了该参数，且等值于某策略（static），则使用该策略
# Speedtest规则
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Speedtest/Speedtest.list, tag = Speedtest 规则, force-policy = Speedtest, update-interval = 86400, opt-parser = false, enabled = true
# Netflix 规则
# https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Netflix/Netflix.list, tag = Netflix 规则, force-policy = Netflix, update-interval = 86400, opt-parser = false, enabled = true
# Disney 规则
# https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Disney/Disney.list, tag = Disney, force-policy = Disney+, update-interval = 86400, opt-parser = true, enabled = true
# HBO 规则
# https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/release/rule/QuantumultX/HBO/HBO.list, tag = HBO, force-policy = HBO, update-interval = 172800, opt-parser = true, enabled = true
# Spotify 规则
# https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Spotify/Spotify.list, tag = Spotify 规则, force-policy = Spotify, update-interval = 86400, opt-parser = false, enabled = true
# Youtube 规则
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX//YouTube/YouTube.list, tag = YouTube 规则, force-policy = YouTube, update-interval = 86400, opt-parser = false, enabled = true
# Tiktok 规则
# https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/TikTok/TikTok.list, tag = TikTok 规则, force-policy = TikTok, update-interval = 86400, opt-parser = false, enabled = true
# 出国媒体规则
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/GlobalMedia/GlobalMedia.list, tag = GMedia 规则, force-policy = GMedia, update-interval = 86400, opt-parser = false, enabled = true
# Telegram 规则
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Telegram/Telegram.list, tag = Telegram 规则, force-policy = Telegram, update-interval = 86400, opt-parser = false, enabled = true
# Paypal 规则
# https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/PayPal/PayPal.list, tag = PayPal 规则, force-policy = PayPal, update-interval = 86400, opt-parser = false, enabled = true
# Microsoft 规则
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Microsoft/Microsoft.list, tag = Microsoft 规则, force-policy = Microsoft, update-interval = 86400, opt-parser = false, enabled = true
# Twitter 规则
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Twitter/Twitter.list, tag = Twitter规则, force-policy = Twitter, update-interval = 86400, opt-parser = false, enabled = true
# Google 规则
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Google/Google.list, tag = Google规则, force-policy = Google, update-interval = 86400, opt-parser = false, enabled = true
# TestFlight 规则
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/TestFlight/TestFlight.list, tag = TestFlight, force-policy = TestFlight, update-interval = 86400, opt-parser = false, enabled = true
# Apple 规则
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Apple/Apple.list, tag = Apple 规则, force-policy = Apple, update-interval = 86400, opt-parser = false, enabled = true
# 出国总规则
https://raw.githubusercontent.com/GeQ1an/Rules/master/QuantumultX/Filter/Outside.list, tag = Outside 规则, force-policy = Outside, update-interval = 86400, opt-parser = false, enabled = true

# 国内媒体规则
# Bilibili
# https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/BiliBili/BiliBili.list, tag = Bilibili, force-policy = Bilibili, update-interval = 172800, opt-parser = false, enabled = true
# iQiYi
# https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/iQIYI/iQIYI.list, tag = iQiYi, force-policy = iQiYi, update-interval = 172800, opt-parser = false, enabled = true
# 国内总规则
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/China/China.list, tag = Mainland 规则, force-policy = Mainland, update-interval = 86400, opt-parser = false, enabled = true
# 去广告规则
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Advertising/Advertising.list, tag = Advertising, force-policy = Advertising, update-interval = 172800, opt-parser = false, enabled = true

[filter_local]
# 本地分流规则
# - 所有规则下本地规则优先生效
# 参数说明
# @user-agent 用户代理
# user-agent, ?abc*, proxy
# @host 主机
# host www.google.com proxy
# @host-keyword 主机关键字
# host-keyword, adsite, reject
# @host-suffix 主机后缀
# host-suffix, .google.com, proxy

# 绕过企业证书过期
host, ocsp.apple.com, reject


# 其它
host-suffix, local, direct
# 本地分流规则默认不可动配置 - start
## 以下 5 条配置不存在时，首页节点和策略不可见，所以必须配置
ip-cidr, 10.0.0.0/8, direct
ip-cidr, 127.0.0.0/8, direct
ip-cidr, 172.16.0.0/12, direct
ip-cidr, 192.168.0.0/16, direct
ip-cidr, 224.0.0.0/24, direct
## Original version
### geoip, cn, direct
### final, proxy
## new version
geoip, cn, Mainland
final, Final
# 本地分流规则默认不可动配置 - end

[server_local]
# 本地服务器节点

[server_remote]
# 远程服务器引用(订阅)，支持远程订阅地址和本地文件

[rewrite_remote]
# 远程重写订阅
# 包含主机名 hostname 以及复写 rewrite 规则
# update-interval 为更新时间参数，单位：秒, 默认更新时间为：24*60*60=86400 秒，也就是24小时
# opt-parser = true/false 用于控制是否对订阅开启资源解析器，不写或者 false 表示不启用解析器
https://raw.githubusercontent.com/QuentinHsu/Apple-Rules-Script/main/quantumult_x/rewrite/jd.conf, tag=京东系列, update-interval=86400, opt-parser=false, enabled=true
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Rewrite/General.conf, tag = 神机重定向, update-interval = 86400, opt-parser = false, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/QuantumultX/Advertising/Advertising.conf, tag = 去广告, update-interval = 86400, opt-parser = false, enabled = true
https://raw.githubusercontent.com/chavyleung/scripts/master/box/rewrite/boxjs.rewrite.quanx.conf, tag = BoxJS, update-interval = 86400, opt-parser = false, enabled = true


[rewrite_local]
# 本地重写

[task_local]
# 本地任务
event-interaction https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/streaming-ui-check.js, tag=流媒体-解锁查询, img-url=checkmark.seal.system, enabled=true
event-interaction https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/geo_location.js, tag = GeoIP查询, img-url = location.fill.viewfinder.system
event-interaction https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/nf-ui-check.js, tag = Netflix解锁检测, img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Netflix.png, enabled = true
event-interaction https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/ytb-ui-check.js, tag = YouTube Premuim检测, img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Youtube.png, enabled = true
event-interaction https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/disney-ui-check.js, tag = Disney⁺ 查询, img-url = https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Disney+.png, enabled = true
5 0 * * * https://raw.githubusercontent.com/NobyDa/Script/master/JD-DailyBonus/JD_DailyBonus.js, tag = 东多合一签到, img-url = https://raw.githubusercontent.com/ChuheGit/1/main/QuantumultX/Gallery/API-Icon/JD_DailyBonus.png, enabled = true
2 9 * * * https://raw.githubusercontent.com/ChuheGit/1/main/Script/jd_scripts/jd_bean_change.js, tag = 京豆变动通知, img-url = https://raw.githubusercontent.com/ChuheGit/1/main/QuantumultX/Gallery/API-Icon/jd_bean_change.png, enabled = true
# 20 9 * * * https://raw.githubusercontent.com/NobyDa/Script/master/iQIYI-DailyBonus/iQIYI.js, tag = 爱奇艺签到, img-url = https://raw.githubusercontent.com/ChuheGit/1/main/QuantumultX/Gallery/API-Icon/iQIYI.png, enabled = true
# 15 0 * * * https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/script/luka/luka_signin.js, tag = Luka每日签到, enabled = true

[mitm]
# mitm，中间人攻击。
# - 开启 mitm，需要自行在 Quantumult X 中生成证书、安装、信任。不然无法开启 mitm，甚至是无法开启 Quantumult X。

# 是否跳过验证证书
skip_validating_cert = false
# 是否强制嗅域名
force_sni_domain_name = false
hostname =